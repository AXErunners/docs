# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Axe Core Group, Inc
# This file is distributed under the same license as the Axe package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Axe latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-22 13:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../masternodes/understanding.rst:1
msgid ""
"Explanation of how Axe masternodes work in theory and practice to "
"support InstantSend, PrivateSend and governance"
msgstr ""

#: ../../masternodes/understanding.rst:1
msgid ""
"axe, masternodes, hosting, linux, payment, instantsend, privatesend, "
"governance, quorum, evolution, bls,"
msgstr ""

#: ../../masternodes/understanding.rst:9
msgid "Understanding Masternodes"
msgstr ""

#: ../../masternodes/understanding.rst:17
msgid ""
"Masternodes, once unique to the Axe network, are now becoming popular as"
" the technology is forked into other blockchains. This section of the "
"documentation describes the principles and mechanisms of masternodes and "
"the services they provide to the Axe network specifically."
msgstr ""

#: ../../masternodes/understanding.rst:22
msgid ""
"Simply put, a masternode is a server with a full copy of the Axe "
"blockchain, which guarantees a certain minimum level of performance and "
"functionality to perform certain tasks related to block validation, as "
"well as PrivateSend and InstantSend, as the anonymity and instant "
"transaction features in Axe are called. The masternodes are paid for "
"this service, using a concept known as Proof of Service. This is in "
"addition to the Proof of Work done by miners to secure the blockchain. "
"Masternodes are also allowed to vote on :ref:`governance and funding "
"proposals <governance>`, with each masternode receiving one vote "
"(yes/no/abstain) on each proposal submitted to the system."
msgstr ""

#: ../../masternodes/understanding.rst:33
msgid ""
"Anyone can run a masternode. The objective is to have enough "
"decentralization to ensure that no single person controls a significant "
"fraction of the masternodes. However, to avoid bloating the network with "
"unnecessary masternodes or encouraging reckless operators, there is one "
"condition that needs to be fulfilled: proof of ownership of 1000 Axe. "
"The coins don't need to be in the masternode, but they need to be kept in"
" a certain way that is transparent to the entire network. If the owner "
"moves or spends those coins, the masternode stops working and payment "
"ceases."
msgstr ""

#: ../../masternodes/understanding.rst:43
#, python-format
msgid ""
"Masternodes are paid by the network for the PrivateSend, InstantSend and "
"governance services they provide. 45% of the block reward is paid out to "
"the masternodes, 45% to miners and 10% to the budget. In practice, half "
"of the reward from a normal block goes to the miner and half to the "
"masternode. Then, every 16,616 blocks (approximately 30.29 days), a "
"superblock is created that contains the entire 10% payout to the budget "
"proposal winners. Masternodes are selected for payment in each block "
"(approximately every 2.6 minutes) from a deterministic masternode list, "
"and moved to the back of the list after payment. As more masternodes are "
"created, the duration between payments increases. If the collateral "
"behind a masternode is spent, or if a masternode stops providing services"
" to the network for more than one hour, it is removed from the list until"
" normal service resumes. In this way, masternodes are given incentive to "
"provide efficient and reliable services to the network."
msgstr ""

#: ../../masternodes/understanding.rst:58
msgid ""
"Having so many servers holding a full copy of the blockchain and working "
"for the coin can be extremely useful. Thanks to the reward system, there "
"is no risk of not having enough masternodes, and the developers can rely "
"on them quickly deploying any new decentralized feature they want to "
"implement. This is where the true strength of Axe lies - an incentivized"
" system of thousands of distributed servers working 24x7 means that Axe "
"can scale more efficiently and deploy services more quickly than a "
"blockchain run entirely by unpaid volunteers. The more masternodes, the "
"better and safer the Axe network."
msgstr ""

#: ../../masternodes/understanding.rst:68
#, python-format
msgid ""
"As of November 2018, the Axe network has `over 5000 masternodes located "
"<http://178.254.23.111/~pub/masternode_count.png>`_ in over `45 countries"
" <https://chainz.cryptoid.info/axe/masternodes.dws>`_ and hosted on "
"`over 140 ISPs <http://178.254.23.111/~pub/Axe/masternode_ISPs.html>`_. "
"The block reward is approximately 3.34 Axe, so the selected masternode "
"receives 1.67 Axe per payment or approximately 6 Axe per month. The "
"block reward decreases by 7.14% approximately once per year, so the "
"annual earnings for a masternode owner is approximately 7% of the "
"collateral, and will decrease over time `as calculated here "
"<https://docs.google.com/spreadsheets/d"
"/1HqgEkyfZDAA6pIZ3df2PwFE8Z430SVIzQ-mCQ6wGCh4/edit#gid=523620673>`_. See "
"`this tool <https://axe- news.de/axetv/#value=1000>`_ to calculate "
"real-time payment rates, and `this site "
"<http://178.254.23.111/~pub/Axe/Axe_Info.html>`_ for various real-time "
"statistics on the masternode network."
msgstr ""

#: ../../masternodes/understanding.rst:88
msgid "DIP003 Masternode Changes"
msgstr ""

#: ../../masternodes/understanding.rst:90
msgid ""
"Axe 0.13.0 implements DIP003, which introduces several changes to how a "
"Axe masternode is set up and operated. A list of available documentation"
" appears below:"
msgstr ""

#: ../../masternodes/understanding.rst:94
msgid ""
"`DIP003 Deterministic Masternode Lists "
"<https://github.com/axerunners/dips/blob/master/dip-0003.md>`__"
msgstr ""

#: ../../masternodes/understanding.rst:95
msgid ":ref:`dip3-changes` (you are here)"
msgstr ""

#: ../../masternodes/understanding.rst:96
msgid ":ref:`dip3-upgrade`"
msgstr ""

#: ../../masternodes/understanding.rst:97
msgid ":ref:`Full masternode setup guide <masternode-setup>`"
msgstr ""

#: ../../masternodes/understanding.rst:98
msgid ":ref:`Information for users of hosted masternodes <hosted-setup>`"
msgstr ""

#: ../../masternodes/understanding.rst:99
msgid ""
":ref:`Information for operators of hosted masternodes <operator-"
"transactions>`"
msgstr ""

#: ../../masternodes/understanding.rst:101
msgid "Important concepts and changes:"
msgstr ""

#: ../../masternodes/understanding.rst:103
msgid ""
"It is possible to upgrade an existing masternode in-place without "
"starting a new server and without moving your 1000 AXE collateral."
msgstr ""

#: ../../masternodes/understanding.rst:105
msgid ""
"A masternode was previously \"started\" using the ``masternode start-"
"alias`` command based on a ``masternode.conf`` file. Under DIP003, this "
"file is no longer used, and masternodes are \"registered\" instead of "
"\"started\". Masternodes begin offering services when a `ProRegTx "
"<https://github.com/axerunners/dips/blob/master/dip-0003.md#registering-a"
"-masternode-proregtx>`_ `special transaction "
"<https://github.com/axerunners/dips/blob/master/dip-0002.md>`_ containing a "
"particular key is written to the blockchain."
msgstr ""

#: ../../masternodes/understanding.rst:111
msgid ""
"As before in ``masternode.conf``, the ProRegTx references the transaction"
" id (txid) and index holding the collateral. The IP address and port of "
"the masternode are also defined in this transaction."
msgstr ""

#: ../../masternodes/understanding.rst:114
msgid ""
"The ProRegTx contains 2 Axe addresses (also called public keys) and one "
"BLS public key, which represent 3 different roles in the masternode and "
"define update and voting rights. The keys are:"
msgstr ""

#: ../../masternodes/understanding.rst:118
msgid ""
"``ownerKeyAddr``: This is a Axe address (public key) controlled by the "
"masternode owner. It is different from the address used for the "
"collateral. Because the owner uses the private key associated with this "
"address to issue :ref:`ProUpRegTx <update-dip3-config>` transactions, it "
"must be unique for each masternode."
msgstr ""

#: ../../masternodes/understanding.rst:123
msgid ""
"``operatorPubKey``: This is the BLS public key of the masternode "
"operator. Only the operator is allowed to issue :ref:`ProUpServTx "
"<update-dip3-config>` transactions. Because the operator key is used "
"during live masternode operation to sign masternode-related P2P messages,"
" quorum-related messages and governance trigger votes, the BLS key must "
"be unique for each masternode."
msgstr ""

#: ../../masternodes/understanding.rst:129
msgid ""
"``votingKeyAddr``: This is a Axe address (public key) used for proposal "
"voting. Votes signed with the corresponding private key are valid while "
"the masternode is in the registered set."
msgstr ""

#: ../../masternodes/understanding.rst:133
msgid ""
"Masternode payments were previously sent to the address holding the "
"collateral. Under DIP003, the owner should specify a different address to"
" receive payments in the ProRegTx. The owner may optionally specify a "
"non-zero percentage as payment to a separate masternode operator, if "
"applicable."
msgstr ""

#: ../../masternodes/understanding.rst:138
msgid ""
"The masternode configuration can later be updated using ProUpServTx, "
"ProUpRegTx and ProUpRevTx transactions. See `Updating Masternode "
"Information <https://github.com/axerunners/dips/blob/master/dip-0003.md"
"#updating-masternode-information>`_ in DIP003 and :ref:`update-"
"dip3-config` in this documentation for more details."
msgstr ""

#: ../../masternodes/understanding.rst:143
msgid ""
"All functions related to DIP003 will only take effect once Spork 15 is "
"enabled on the network. Until then, it is necessary to set up the "
"masternode following the `old process "
"<https://docs.axerunners.com/en/0.12.3/masternodes/setup.html>`_ and then work "
"through the :ref:`upgrade procedure <dip3-upgrade>`. In this state, the "
"masternode will continue to function in compatibility mode, and all "
"DIP003 related functions, such as payments to a separate address or "
"percentage payments to operators, will not yet have any effect. The "
"``ownerKeyAddr`` and ``votingKeyAddr`` must also be identical until Spork"
" 15 is enabled."
msgstr ""

#: ../../masternodes/understanding.rst:153
msgid "The process of setting up or upgrading a masternode is as follows:"
msgstr ""

#: ../../masternodes/understanding.rst:155
msgid "Set up your server and operating system"
msgstr ""

#: ../../masternodes/understanding.rst:156
msgid "Install the Axe software and synchronize the blockchain"
msgstr ""

#: ../../masternodes/understanding.rst:157
msgid "Generate a BLS key pair and enter the private key on the masternode"
msgstr ""

#: ../../masternodes/understanding.rst:158
msgid "Prepare a ProRegTx transaction"
msgstr ""

#: ../../masternodes/understanding.rst:159
msgid "Sign the ProRegTx transaction"
msgstr ""

#: ../../masternodes/understanding.rst:160
msgid "Submit the signed ProRegTx transaction"
msgstr ""

#: ../../masternodes/understanding.rst:162
msgid ""
"Step 1 can be omitted if you have an existing server. Steps 2 and 3 "
"require direct access to the masternode. Steps 3 and 4 require access to "
"a Axe Wallet (or DMT). Step 5 requires access to the wallet actually "
"holding the collateral. Step 6 requires a Axe balance to pay the "
"transaction fee."
msgstr ""

#: ../../masternodes/understanding.rst:169
msgid "Masternodes vs. mining"
msgstr ""

#: ../../masternodes/understanding.rst:171
msgid ""
"Axe, like Bitcoin and most other cryptocurrencies, is based on a "
"decentralized ledger of all transactions, known as a blockchain. This "
"blockchain is secured through a consensus mechanism; in the case of both "
"Axe and Bitcoin, the consensus mechanism is Proof of Work (PoW). "
":ref:`Miners <mining>` attempt to solve difficult problems with "
"specialized computers, and when they solve the problem, they receive the "
"right to add a new block to the blockchain. If all the other people "
"running the software agree that the problem was solved correctly, the "
"block is added to the blockchain and the miner is rewarded."
msgstr ""

#: ../../masternodes/understanding.rst:181
#, python-format
msgid ""
"Axe works a little differently from Bitcoin, however, because it has a "
"two-tier network. The second tier is powered by masternodes (Full Nodes),"
" which enable financial privacy (PrivateSend), instant transactions "
"(InstantSend), and the decentralized governance and budget system. "
"Because this second tier is so important, masternodes are also rewarded "
"when miners discover new blocks. The breakdown is as follows: 45% of the "
"block reward goes to the miner, 45% goes to masternodes, and 10% is "
"reserved for the budget system (created by superblocks every month)."
msgstr ""

#: ../../masternodes/understanding.rst:191
msgid ""
"The masternode system is referred to as Proof of Service (PoSe), since "
"the masternodes provide crucial services to the network. In fact, the "
"entire network is overseen by the masternodes, which have the power to "
"reject improperly formed blocks from miners. If a miner tried to take the"
" entire block reward for themselves or tried to run an old version of the"
" Axe software, the masternode network would orphan that block, and it "
"would not be added to the blockchain."
msgstr ""

#: ../../masternodes/understanding.rst:199
msgid ""
"In short, miners power the first tier, which is the basic sending and "
"receiving of funds and prevention of doublespending. Masternodes power "
"the second tier, which provide the added features that make Axe "
"different from other cryptocurrencies. Masternodes do not mine, and "
"mining computers cannot serve as masternodes. Additionally, each "
"masternode is “secured” by 1000 AXE. Those AXE remain under the sole "
"control of their owner at all times, and can still be freely spent. The "
"funds are not locked in any way. However, if the funds are moved or "
"spent, the associated masternode will go offline and stop receiving "
"rewards."
msgstr ""

#: ../../masternodes/understanding.rst:214
msgid "Payment logic"
msgstr ""

#: ../../masternodes/understanding.rst:216
msgid ""
"Masternode paymentss in Axe version 0.13.0 are entirely deterministic "
"and based on a simple list sort algorithm. For documentation of version "
"0.12.0 payment logic, see the `legacy masternode payment documentation "
"<https://docs.axerunners.com/en/0.12.3/masternodes/understanding.html#payment-"
"logic>`_. Axe version 0.13.0 implements `DIP003 "
"<https://github.com/axerunners/dips/blob/master/dip-0003.md>`_ and defines "
"two sets of masternodes."
msgstr ""

#: ../../masternodes/understanding.rst:224
msgid ""
"The full set, which contains all registered masternodes that have not "
"spent their collateral funding transactions."
msgstr ""

#: ../../masternodes/understanding.rst:226
msgid ""
"The valid set, a subset of the full set which contains all masternodes "
"which are not marked as Proof of Service (PoSe) banned."
msgstr ""

#: ../../masternodes/understanding.rst:229
msgid ""
"Each masternode in the set of valid masternodes is identified by the "
"block at which it was last paid. If it has never received payment or was "
"banned for failing to meet the PoSe requirements, then the block at which"
" it was first registered or at which PoSe was restored is used instead. "
"The list is sorted in ascending order, and the first entry is paid. If "
"this results in more than one masternode, then the hash of the masternode"
" ProRegTx is sorted to break the tie."
msgstr ""

#: ../../masternodes/understanding.rst:239
msgid "Quorum selection"
msgstr ""

#: ../../masternodes/understanding.rst:241
msgid ""
"InstantSend transactions in Axe version 0.13.0 are secured using a "
"consensus of deterministically selected masternodes. This set of "
"masternodes is informally termed a quorum and must be in a majority "
"agreement, at least six out of ten, for a successful lock of the "
"transaction inputs. Multiple quorums are self-selected for each input in "
"an InstantSend transaction using the mathematical distance between the "
"hash of each input and of the set of masternode funding transactions."
msgstr ""

#: ../../masternodes/understanding.rst:249
msgid ""
"Each masternode receiving the InstantSend transaction lock request "
"compares the hash of the masternode's funding transaction to the hash of "
"the input requesting the lock. After validating the inputs are not spent,"
" the ten masternodes furthest from this hash broadcast their acceptance "
"of the lock."
msgstr ""

#: ../../masternodes/understanding.rst:255
msgid ""
"All InstantSend inputs must be at least six blocks old or the transaction"
" will be rejected."
msgstr ""

#: ../../masternodes/understanding.rst:260
msgid "Masternode requirements"
msgstr ""

#: ../../masternodes/understanding.rst:262
msgid ""
"1000 Axe: Arguably the hardest part. Axe can be obtained from exchanges"
" such as Poloniex, Bittrex, Kraken and LiveCoin. Shapeshift's service is "
"also an excellent way."
msgstr ""

#: ../../masternodes/understanding.rst:265
msgid ""
"A server or VPS running Linux: Most recent guides use Ubuntu 16.04 LTS. "
"We recommend VPS services such as Vultr and DigitalOcean, although any "
"decent provider will do. Generally an instance with low to average "
"specifications will do, although performance requirements will increase "
"according to this roadmap."
msgstr ""

#: ../../masternodes/understanding.rst:270
msgid "A dedicated IP address: These usually come with the VPS/server."
msgstr ""

#: ../../masternodes/understanding.rst:271
msgid ""
"A little time and (heart): Masternodes used to require complex setup, but"
" tools such as axeman now greatly simplify the process."
msgstr ""

#: ../../masternodes/understanding.rst:274
msgid ""
"In addition to the 1000 Axe held in collateral, masternodes also have "
"minimum hardware requirements. As of version 12.1, these requirements are"
" as follows:"
msgstr ""

#: ../../masternodes/understanding.rst:279
msgid "Minimum"
msgstr ""

#: ../../masternodes/understanding.rst:279
msgid "Recommended"
msgstr ""

#: ../../masternodes/understanding.rst:281
msgid "CPU"
msgstr ""

#: ../../masternodes/understanding.rst:281
msgid "1x 1 GHz"
msgstr ""

#: ../../masternodes/understanding.rst:281
msgid "1x 2 GHz"
msgstr ""

#: ../../masternodes/understanding.rst:283
msgid "RAM"
msgstr ""

#: ../../masternodes/understanding.rst:283
msgid "2 GB"
msgstr ""

#: ../../masternodes/understanding.rst:283
msgid "4 GB"
msgstr ""

#: ../../masternodes/understanding.rst:285
msgid "Disk"
msgstr ""

#: ../../masternodes/understanding.rst:285
msgid "20 GB"
msgstr ""

#: ../../masternodes/understanding.rst:285
msgid "40 GB"
msgstr ""

#: ../../masternodes/understanding.rst:287
msgid "Network"
msgstr ""

#: ../../masternodes/understanding.rst:287
msgid "400 GB/mth"
msgstr ""

#: ../../masternodes/understanding.rst:287
msgid "1 TB/mth"
msgstr ""

#: ../../masternodes/understanding.rst:290
msgid ""
"Masternode bandwidth use ranges between 300-500 GB per month and will "
"grow as the network does."
msgstr ""

#: ../../masternodes/understanding.rst:294
msgid "Axe Evolution"
msgstr ""

#: ../../masternodes/understanding.rst:296
msgid ""
"The exact hardware requirements for Axe Evolution masternodes have yet "
"to be determined, although some pointers can be taken from the `roadmap "
"<https://github.com/axerunners/axe-roadmap>`_ and this `blog post "
"<https://medium.com/@eduffield222/how-to-enabling-on-chain-scaling-"
"2ffab5997f8b>`_. It should be possible to run Axe masternodes on normal "
"VPS servers until the block size reaches approximately 20 MB, after which"
" custom hardware such as GPUs and eventually ASICs may be required."
msgstr ""

#~ msgid ""
#~ "As of March 2018, the Axe network"
#~ " has `over 4700 masternodes located "
#~ "<http://178.254.23.111/~pub/masternode_count.png>`_ in "
#~ "over `41 countries "
#~ "<https://chainz.cryptoid.info/axe/masternodes.dws>`_ and "
#~ "hosted on `over 100 ISPs "
#~ "<http://178.254.23.111/~pub/Axe/masternode_ISPs.html>`_. The"
#~ " block reward is approximately 3.34 "
#~ "Axe, so the selected masternode "
#~ "receives 1.67 Axe per payment or "
#~ "approximately 6 Axe per month. The "
#~ "block reward decreases by 7.14% "
#~ "approximately once per year, so the "
#~ "annual return on investment (ROI) to "
#~ "a masternode owner is currently under"
#~ " 8% and will decrease over time. "
#~ "See `this tool <https://axe- "
#~ "news.de/axetv/#value=1000>`_ to calculate real-"
#~ "time ROI rates, and `this site "
#~ "<http://178.254.23.111/~pub/Axe/Axe_Info.html>`_ for "
#~ "various real-time statistics on the "
#~ "masternode network."
#~ msgstr ""

#~ msgid ""
#~ "The selection pool is the top 10%"
#~ " of the global list.  Its size "
#~ "is determined by the total masternode"
#~ " count. As an example, if there "
#~ "are 4600 active masternodes, the top "
#~ "460 masternodes in the global list "
#~ "are eligible for selection. Once in "
#~ "the selection pool, selection for "
#~ "payment is determined by block hash "
#~ "entropy. The block hash 100 blocks "
#~ "ago determines which masternode will be"
#~ " selected for payment. A double "
#~ "SHA256 of the funding transaction hash"
#~ " and index for all masternodes in "
#~ "the selection pool is compared with "
#~ "the proof of work hash 100 blocks"
#~ " ago. The masternode with the closest"
#~ " numeric hash value to that block "
#~ "hash is selected for payment."
#~ msgstr ""

#~ msgid ""
#~ "Because selection is determined by block"
#~ " hash entropy, it is impossible to"
#~ " predict when a payment will occur."
#~ " Once in the selection pool, payments"
#~ " become a probability. These probabilities"
#~ " are calculated using an assumed "
#~ "current pool size of 450 (at 4500"
#~ " total masternodes)."
#~ msgstr ""

#~ msgid ""
#~ "As an example of reading this "
#~ "chart, after a masternode has been "
#~ "in the selection pool for 12 "
#~ "hours, 45.98% of nodes due to be"
#~ " selected will have been selected and"
#~ " removed from the selection pool to"
#~ " the back of the list."
#~ msgstr ""

#~ msgid ""
#~ "Simply put, a masternode is a "
#~ "server connected to the network which"
#~ " guarantees a certain minimum level "
#~ "of performance and functionality to "
#~ "perform certain tasks related to "
#~ "PrivateSend and InstantSend, as the "
#~ "anonymity and instant transaction features "
#~ "in Axe are called. The masternodes "
#~ "are paid for this service, using a"
#~ " concept known as Proof of Service."
#~ " This is in addition to the "
#~ "Proof of Work done by miners to"
#~ " secure the blockchain. Masternodes are "
#~ "also allowed to vote on :ref:`governance"
#~ " and funding proposals <governance>`, with"
#~ " each masternode receiving one vote "
#~ "(yes/no/abstain) on each proposal submitted"
#~ " to the system."
#~ msgstr ""

#~ msgid ""
#~ "As of March 2018, the Axe network"
#~ " has `over 4700 masternodes located "
#~ "<http://178.254.23.111/~pub/masternode_count.png>`_ in "
#~ "over `41 countries "
#~ "<https://chainz.cryptoid.info/axe/masternodes.dws>`_ and "
#~ "hosted on `over 100 ISPs "
#~ "<http://178.254.23.111/~pub/Axe/masternode_ISPs.html>`_. The"
#~ " block reward is approximately 3.34 "
#~ "Axe, so the selected masternode "
#~ "receives 1.67 Axe per payment or "
#~ "approximately 6 Axe per month. The "
#~ "block reward decreases by 7.14% "
#~ "approximately once per year, so the "
#~ "annual return on investment (ROI) to "
#~ "a masternode owner is approximately 7%"
#~ " and will decrease over time `as "
#~ "calculated here <https://docs.google.com/spreadsheets/d"
#~ " /1HqgEkyfZDAA6pIZ3df2PwFE8Z430SVIzQ-"
#~ "mCQ6wGCh4/edit#gid=523620673>`_. See `this tool "
#~ "<https://axe- news.de/axetv/#value=1000>`_ to "
#~ "calculate real-time ROI rates, and "
#~ "`this site "
#~ "<http://178.254.23.111/~pub/Axe/Axe_Info.html>`_ for "
#~ "various real-time statistics on the "
#~ "masternode network."
#~ msgstr ""

#~ msgid ""
#~ "The exact hardware requirements for Axe"
#~ " Evolution masternodes have yet to be"
#~ " determined, although some pointers can "
#~ "be taken from the `roadmap "
#~ "<https://github.com/axerunners/axe-roadmap>`_ and this"
#~ " `blog post <https://medium.com/@eduffield222/how-"
#~ "to-enabling-on-chain-scaling- "
#~ "2ffab5997f8b>`_. It should be possible "
#~ "to run Axe masternodes on normal "
#~ "VPS servers until the block size "
#~ "reaches approximately 20 MB, after which"
#~ " custom hardware such as GPUs and "
#~ "eventually ASICs will be required."
#~ msgstr ""

#~ msgid ""
#~ "axe, masternodes, hosting, linux, payment,"
#~ " instantsend, privatesend, governance, quorum,"
#~ " evolution"
#~ msgstr ""

#~ msgid ""
#~ "Masternodes are paid by the network "
#~ "for the PrivateSend, InstantSend and "
#~ "governance services they provide. 45% of"
#~ " the block reward is paid out "
#~ "to the masternodes, 45% to miners "
#~ "and 10% to the budget. In "
#~ "practice, half of the reward from "
#~ "a normal block goes to the miner"
#~ " and half to the masternode. Then,"
#~ " every 16,616 blocks (approximately 30.29"
#~ " days), a superblock is created that"
#~ " contains the entire 10% payout to"
#~ " the budget proposal winners. Masternodes"
#~ " are randomly selected for payment in"
#~ " each block (approximately every 2.6 "
#~ "minutes) from a list once they "
#~ "reach the top 10% of the total "
#~ "count of masternodes, and moved to "
#~ "the back of the list after "
#~ "payment. As more masternodes are "
#~ "created, the duration between payments "
#~ "increases. Due to the selection "
#~ "algorithm, there is always an aspect "
#~ "of randomness to payment selection, but"
#~ " in the long term all masternode "
#~ "owners should receive similar payments. "
#~ "If the collateral behind a masternode"
#~ " is spent, or if a masternode "
#~ "stops providing services to the network"
#~ " for more than one hour, it is"
#~ " removed from the list until normal"
#~ " service resumes. In this way, "
#~ "masternodes are given incentive to "
#~ "provide efficient and reliable services "
#~ "to the network."
#~ msgstr ""

#~ msgid ""
#~ "As of March 2018, the Axe network"
#~ " has `over 4700 masternodes located "
#~ "<http://178.254.23.111/~pub/masternode_count.png>`_ in "
#~ "over `41 countries "
#~ "<https://chainz.cryptoid.info/axe/masternodes.dws>`_ and "
#~ "hosted on `over 100 ISPs "
#~ "<http://178.254.23.111/~pub/Axe/masternode_ISPs.html>`_. The"
#~ " block reward is approximately 3.34 "
#~ "Axe, so the selected masternode "
#~ "receives 1.67 Axe per payment or "
#~ "approximately 6 Axe per month. The "
#~ "block reward decreases by 7.14% "
#~ "approximately once per year, so the "
#~ "annual earnings for a masternode owner"
#~ " is approximately 7% of the "
#~ "collateral, and will decrease over time"
#~ " `as calculated here "
#~ "<https://docs.google.com/spreadsheets/d"
#~ "/1HqgEkyfZDAA6pIZ3df2PwFE8Z430SVIzQ-"
#~ "mCQ6wGCh4/edit#gid=523620673>`_. See `this tool "
#~ "<https://axe- news.de/axetv/#value=1000>`_ to "
#~ "calculate real-time payment rates, and"
#~ " `this site "
#~ "<http://178.254.23.111/~pub/Axe/Axe_Info.html>`_ for "
#~ "various real-time statistics on the "
#~ "masternode network."
#~ msgstr ""

#~ msgid ""
#~ "Masternode payments in Axe version 12"
#~ " are determined using a completely "
#~ "decentralized deterministic queue with "
#~ "probabilistic selection."
#~ msgstr ""

#~ msgid "Global list"
#~ msgstr ""

#~ msgid ""
#~ "Every masternode appears in the global"
#~ " list. Their position in this list"
#~ " is determined by their time since"
#~ " the last payment according to the"
#~ " network, not the blockchain. New "
#~ "masternodes joining the network and "
#~ "masternodes receiving payment are placed "
#~ "at the end of the list. Running,"
#~ " active masternodes which are restarted "
#~ "using the rpc commands 'masternode "
#~ "start' or 'masternode start-alias' are"
#~ " also placed at the end of the"
#~ " list. Using the new rpc command "
#~ "'masternode start-missing' avoids this. "
#~ "As masternodes are moved to the "
#~ "end of the global list, the "
#~ "remaining masternodes slowly migrate towards"
#~ " the top of the list. Once a"
#~ " masternode reaches the top 10% of"
#~ " the global list, it is eligible "
#~ "for selection from the selection pool."
#~ msgstr ""

#~ msgid "Selection pool"
#~ msgstr ""

#~ msgid ""
#~ "The selection pool is the top 10%"
#~ " of the global list.  Its size "
#~ "is determined by the total masternode"
#~ " count. As an example, if there "
#~ "are 4500 active masternodes, the top "
#~ "450 masternodes in the global list "
#~ "are eligible for selection. Once in "
#~ "the selection pool, selection for "
#~ "payment is determined by block hash "
#~ "entropy. The block hash 100 blocks "
#~ "ago determines which masternode will be"
#~ " selected for payment. A double "
#~ "SHA256 of the funding transaction hash"
#~ " and index for all masternodes in "
#~ "the selection pool is compared with "
#~ "the proof of work hash 100 blocks"
#~ " ago. The masternode with the closest"
#~ " numeric hash value to that block "
#~ "hash is selected for payment."
#~ msgstr ""

#~ msgid "Probabilities"
#~ msgstr ""

#~ msgid ""
#~ "Because selection is determined by block"
#~ " hash entropy, it is impossible to"
#~ " predict when a payment will occur."
#~ " Masternode operators should expect "
#~ "considerable variance in payment intervals "
#~ "over time. Once a masternode enters "
#~ "the selection pool, payments become a"
#~ " probability. The probabilities in this "
#~ "example are calculated using an assumed"
#~ " current pool size of 450 (at "
#~ "4500 total masternodes). Nodes in the"
#~ " selection pool are selected for "
#~ "rewards randomly, i.e. the probability "
#~ "of being selected on any given "
#~ "block is 1/450."
#~ msgstr ""

#~ msgid ""
#~ "The table below shows the probably "
#~ "of an eligible node being selected "
#~ "for payment over a particular period "
#~ "of time. For example, the probability"
#~ " that an eligible node is selected"
#~ " within 12 hours is about 46%. "
#~ "The table does **not** (and cannot) "
#~ "tell us the probability of being "
#~ "selected **after** a given period of "
#~ "time. For example, if you haven’t "
#~ "been selected within the past 12 "
#~ "hours — and we know from this "
#~ "table there is about a 54% chance"
#~ " of that happening — the probability"
#~ " of being selected on the next "
#~ "block is **not** 46%. It remains "
#~ "1/450. Putting these together, if you"
#~ " have an eligible node, and, say, "
#~ "48 hours have passed without payment,"
#~ " then you’ve been very unlucky, as"
#~ " there’s less than a 10% chance "
#~ "of that happening. But, your chances "
#~ "of being selected on the next "
#~ "block remain the same as for any"
#~ " block, i.e. 1/450."
#~ msgstr ""

#~ msgid ""
#~ "Once a node is selected for "
#~ "payment, it is moved to the back"
#~ " of the list and cannot be "
#~ "selected again until it re-enters "
#~ "the selection pool."
#~ msgstr ""

#~ msgid "Hours"
#~ msgstr ""

#~ msgid "Blocks"
#~ msgstr ""

#~ msgid "Probability"
#~ msgstr ""

#~ msgid "1"
#~ msgstr ""

#~ msgid "23.07"
#~ msgstr ""

#~ msgid "5.00%"
#~ msgstr ""

#~ msgid "2"
#~ msgstr ""

#~ msgid "46.14"
#~ msgstr ""

#~ msgid "9.76%"
#~ msgstr ""

#~ msgid "3"
#~ msgstr ""

#~ msgid "69.21"
#~ msgstr ""

#~ msgid "14.27%"
#~ msgstr ""

#~ msgid "4"
#~ msgstr ""

#~ msgid "92.28"
#~ msgstr ""

#~ msgid "18.56%"
#~ msgstr ""

#~ msgid "6"
#~ msgstr ""

#~ msgid "138.42"
#~ msgstr ""

#~ msgid "26.50%"
#~ msgstr ""

#~ msgid "8"
#~ msgstr ""

#~ msgid "184.56"
#~ msgstr ""

#~ msgid "33.67%"
#~ msgstr ""

#~ msgid "10"
#~ msgstr ""

#~ msgid "230.70"
#~ msgstr ""

#~ msgid "40.14%"
#~ msgstr ""

#~ msgid "12"
#~ msgstr ""

#~ msgid "276.84"
#~ msgstr ""

#~ msgid "45.98%"
#~ msgstr ""

#~ msgid "18"
#~ msgstr ""

#~ msgid "415.26"
#~ msgstr ""

#~ msgid "60.30%"
#~ msgstr ""

#~ msgid "24"
#~ msgstr ""

#~ msgid "553.68"
#~ msgstr ""

#~ msgid "70.82%"
#~ msgstr ""

#~ msgid "30"
#~ msgstr ""

#~ msgid "692.10"
#~ msgstr ""

#~ msgid "78.56%"
#~ msgstr ""

#~ msgid "36"
#~ msgstr ""

#~ msgid "830.52"
#~ msgstr ""

#~ msgid "84.24%"
#~ msgstr ""

#~ msgid "42"
#~ msgstr ""

#~ msgid "968.94"
#~ msgstr ""

#~ msgid "88.42%"
#~ msgstr ""

#~ msgid "48"
#~ msgstr ""

#~ msgid "1107.36"
#~ msgstr ""

#~ msgid "91.49%"
#~ msgstr ""

#~ msgid "72"
#~ msgstr ""

#~ msgid "1661.04"
#~ msgstr ""

#~ msgid "97.52%"
#~ msgstr ""

#~ msgid "96"
#~ msgstr ""

#~ msgid "2214.72"
#~ msgstr ""

#~ msgid "99.28%"
#~ msgstr ""

#~ msgid ""
#~ "You can run the code (written by"
#~ " community member moocowmoo used to "
#~ "create the table above `here "
#~ "<https://repl.it/@moocowmoo/Axe-Selection- "
#~ "Probability>`_."
#~ msgstr ""

#~ msgid ""
#~ "InstantSend transactions in Axe version "
#~ "12 are secured using a consensus "
#~ "of deterministically selected masternodes. "
#~ "This set of masternodes is informally"
#~ " termed a quorum and must be in"
#~ " a majority agreement, at least six"
#~ " out of ten, for a successful "
#~ "lock of the transaction inputs. Multiple"
#~ " quorums are self-selected for each"
#~ " input in an InstantSend transaction "
#~ "using the mathematical distance between "
#~ "the hash of each input and of "
#~ "the set of masternode funding "
#~ "transactions."
#~ msgstr ""

#~ msgid "1 GB"
#~ msgstr ""

#~ msgid "8 GB"
#~ msgstr ""

#~ msgid "16 GB"
#~ msgstr ""

#~ msgid ""
#~ "The exact hardware requirements for Axe"
#~ " Evolution masternodes have yet to be"
#~ " determined, although some pointers can "
#~ "be taken from the `roadmap "
#~ "<https://github.com/axerunners/axe-roadmap>`_ and this"
#~ " `blog post <https://medium.com/@eduffield222/how-"
#~ "to-enabling-on-chain-scaling-"
#~ "2ffab5997f8b>`_. It should be possible "
#~ "to run Axe masternodes on normal "
#~ "VPS servers until the block size "
#~ "reaches approximately 20 MB, after which"
#~ " custom hardware such as GPUs and "
#~ "eventually ASICs will be required."
#~ msgstr ""

#~ msgid ""
#~ "``votingKeyAddr``: This is a Axe "
#~ "address (public key) used for proposal"
#~ " voting. Votes signed with this key"
#~ " are valid while the masternode is"
#~ " in the registered set."
#~ msgstr ""

